{"version":3,"sources":["logo.svg","Components/Result/Result.js","Components/NoResults/NoResults.js","Components/SearchResults/SearchResults.js","Components/SearchBar/SearchBar.js","Components/Popup/Popup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Result","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","data","popUp","_this2","unirest","get","href","end","res","index","body","findIndex","endsWith","setState","links","_this3","add","react_default","a","createElement","style","color","className","onClick","addFavorite","remove","removeFavorite","src","handlePopup","favorites","some","el","Component","NoResults","SearchResults","results","Array","isArray","length","map","result","id","Components_Result_Result","assign","key","Components_NoResults_NoResults","SearchBar","input","handleChange","bind","assertThisInitialized","handleSubmit","searchFavorites","event","target","value","preventDefault","onSearch","onSubmit","onChange","type","Popup","registerPlugin","_ref","closePopup","create","title","content","description","buttons","left","text","action","close","App","favToggle","handleSearch","term","arguments","undefined","replace","concat","collection","items","item","includes","toConsumableArray","window","confirm","filter","newState","Components_SearchBar_SearchBar","Components_SearchResults_SearchResults","Popup_Popup","closeBtn","escToClose","plugins","displayImage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf8c60fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Result.css';\nimport unirest from 'unirest';\n\nclass Result extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {url: \"\", data: this.props.data, popUp: false}; \n\t}\n\n    componentDidMount() {\n    \tunirest.get(this.state.data.href)\n    \t.end( res => {\n\t\t\tconst index = res.body.findIndex(url => url.endsWith('orig.jpg') || url.endsWith('orig.mp4'));\n\t\t\t\n\t\t\tif (res.body[index]) this.setState({url: res.body[index]});\n\t\t\telse this.setState({url: this.state.data.links[0].href});\n\t\t});\n    }\n\n    render() {\n    \tconst add = <span style={{color: 'white'}} className=\"favoriteHandler\" onClick={() => this.props.addFavorite(this.state.data)}>+</span>\n    \tconst remove = <span style={{color: 'white'}} className=\"favoriteHandler\" onClick={() => this.props.removeFavorite(this.state.data)}>-</span>\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<img src={this.state.data.links[0].href} onClick={() => this.props.handlePopup({url: this.state.url, data: this.state.data.data[0]})}/>\n\t\t\t\t<div className=\"addRemove\">\n\t\t\t\t\t{(this.props.favorites.some(el => el.links[0].href == this.props.data.links[0].href)) ? remove : add}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Result;","import React from 'react';\nimport './NoResults.css';\n\nconst NoResults = props => <li className = \"noResults\">Sorry, No Results</li>\n\nexport default NoResults;","import React from 'react';\nimport './SearchResults.css';\nimport Result from '../Result/Result';\nimport NoResults from '../NoResults/NoResults';\n\nconst SearchResults = props => {\n  let results;\n  if (Array.isArray(props.results) && props.results.length > 0) {\n    results = props.results.map((result, id) => {\n      return (result.links && !result.links[0].href.endsWith('srt') && !result.links[0].href.endsWith('vtt')) \n              ? <Result data={result} key={result.href} {...props}/> \n              : null\n    });\n  }\n\n\treturn (\n    <ul className=\"searchResults\">\n      {results ? results : <NoResults />}\n    </ul>\n  );\n};\n\nexport default SearchResults;","import React, { Component } from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.searchFavorites = this.searchFavorites.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({input: event.target.value});\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSearch(this.state.input);\n    this.setState({input: \"\"});\n  }\n  searchFavorites() {\n    this.props.onSearch();\n  }\n\n  render() {\n\treturn (\n    <section className=\"searchBar\">\n        <span className=\"appTitle\">NASA Image Search</span>\n  \t    <div className=\"searchField\">\n          <form onSubmit={this.handleSubmit}>\n    \t      <input value={this.state.input} onChange={this.handleChange} className=\"searchForm\"/>\n    \t      <button type='submit'>SUBMIT</button>\n            <button onClick={this.searchFavorites}>FAVORITE IMAGES</button>\n    \t    </form>\n        </div>\n    </section>\n    );\n  }\n};\n\nexport default SearchBar;","import React from 'react';\nimport Popup from 'react-popup';\nimport './Popup.css';\n\nPopup.registerPlugin('displayImage', function({url, data}, closePopup) {\n    this.create({\n        title: data.title,\n        content: <div><img className=\"popupImage\" src={url}></img>{(data.title != data.description) ? <div className=\"popupDesc\">{data.description}</div> : null}</div>,\n        buttons: {\n            left: [{\n                text: 'Close',\n                key: 'esc',\n                className: 'success',\n                action: function () {\n                    closePopup();\n                    Popup.close();\n                }\n            }]\n        }\n    });\n});\n\nexport default Popup;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport unirest from 'unirest';\nimport SearchResults from './Components/SearchResults/SearchResults';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport Popup from './Components/Popup/Popup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      favorites: [],\n      favToggle: false,\n      popUp: false\n    }\n    this.handleSearch = this.handleSearch.bind(this);\n    this.addFavorite = this.addFavorite.bind(this);\n    this.removeFavorite = this.removeFavorite.bind(this);\n    this.handlePopup = this.handlePopup.bind(this);\n  }\n\n  handleSearch(term = \"\") {\n    if (term = term.replace(/ +/g, \"\")) {\n      unirest.get(`https://images-api.nasa.gov/search?q=${term}`)\n      .end(res => {\n        const results = res.body.collection.items;\n        this.setState({results: (results.length > 0) ? res.body.collection.items : \"No results\", favToggle: false});\n      });\n    } else {\n      this.setState({results: this.state.favorites, favToggle: true});\n    }\n  }\n\n  addFavorite(item) {\n    if (!this.state.favorites.includes(item)) this.setState({favorites: [...this.state.favorites, item]});\n  }\n\n  async removeFavorite(item) {\n    if (window.confirm(`Are you sure you want to remove \\\"${item.data[0].title}\\\" from your favorites?`)) {\n      const newState = await this.state.favorites.filter(el => el !== item);\n      this.setState({favorites: newState, results: this.state.favToggle ? newState : this.state.results});\n    }\n  }\n\n  handlePopup(data) {\n    this.setState({popUp: (data) ? data : false});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={(this.state.popUp) ? \"hideBackground\" : \"showBackground\"}>\n          <SearchBar onSearch={this.handleSearch} />\n          <SearchResults results={this.state.results} addFavorite={this.addFavorite} removeFavorite={this.removeFavorite} favorites={this.state.favorites} handlePopup={this.handlePopup} />\n        </div>\n        <Popup closeBtn={false} escToClose={false}/>\n        {(this.state.popUp) ? Popup.plugins().displayImage(this.state.popUp, this.handlePopup) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}